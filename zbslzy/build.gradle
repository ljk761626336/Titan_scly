apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao' // apply plugin

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.3'

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    defaultConfig {
        applicationId "com.otitan.zbslzy"
        minSdkVersion 14
        targetSdkVersion 26
        versionCode 1
        versionName "1.00"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "淄博林业-v${defaultConfig.versionName}_${defaultConfig.versionCode}.apk"
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    greendao {
        schemaVersion 2004
        daoPackage 'com.otitan.sclyyq.greendao'
        targetGenDir 'src/main/java'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:support-v4:26.1.0'
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support:percent:26.1.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    //            {
    //        exclude group: 'com.google.code.gson'
    //    }
    implementation('com.squareup.retrofit2:converter-simplexml:2.1.0') {
        exclude module: 'stax-api'
        exclude module: 'stax'
        exclude module: 'xpp3'
    }
    //compile(name: 'testlibrary-debug', ext: 'aar')
    //compile project(':zhjc')
    implementation 'com.jakewharton:butterknife:8.5.1'
    implementation 'com.jakewharton:butterknife-compiler:8.5.1'
    implementation 'com.tencent.bugly:crashreport:2.6.6.1'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.3.0'
    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    implementation('cn.yipianfengye.android:zxing-library:2.1') {
        exclude group: "com.android.support"
    }
    testImplementation 'junit:junit:4.12'
    /*greendao*/
    implementation 'org.greenrobot:greendao:3.2.2' // add library
    /**PermissionsDispatcher*/
    implementation('com.github.hotchemi:permissionsdispatcher:2.4.0') {
        // if you don't use android.app.Fragment you can exclude support for them
        exclude module: "support-v13"
        exclude group: "com.android.support"
    }
    annotationProcessor "com.github.hotchemi:permissionsdispatcher-processor:2.4.0"
    // svg文件
    //compile 'com.android.support:appcompat-v7:25.4.0'
    //compile 'com.android.support:design:25.4.0'
    implementation project(':LibraryManager:baselibrary')
    implementation project(':LibraryManager:photopicker')
    implementation project(':LibraryManager:proj4android')
    implementation project(':LibraryManager:versionupdata')
    implementation 'com.android.support:recyclerview-v7:26.1.0'
    implementation project(':LibraryManager:medialibrary')
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}



